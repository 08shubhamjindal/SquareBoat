[{"/home/shubham/Desktop/Square/myjobs/src/index.js":"1","/home/shubham/Desktop/Square/myjobs/src/App.js":"2","/home/shubham/Desktop/Square/myjobs/src/reportWebVitals.js":"3","/home/shubham/Desktop/Square/myjobs/src/Component/Home.js":"4","/home/shubham/Desktop/Square/myjobs/src/Component/Login.js":"5","/home/shubham/Desktop/Square/myjobs/src/Component/SignUp.js":"6","/home/shubham/Desktop/Square/myjobs/src/Component/CreateJob.js":"7","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateDashBoard.js":"8","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateJobCard.js":"9","/home/shubham/Desktop/Square/myjobs/src/Component/RecuirterDashBoard.js":"10","/home/shubham/Desktop/Square/myjobs/src/Component/RecuirteJobCards.js":"11","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateWhoAppliedforRecuriter.js":"12"},{"size":379,"mtime":1608097633159,"results":"13","hashOfConfig":"14"},{"size":877,"mtime":1608128465128,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608095698626,"results":"16","hashOfConfig":"14"},{"size":556,"mtime":1608144987226,"results":"17","hashOfConfig":"14"},{"size":2059,"mtime":1608125290557,"results":"18","hashOfConfig":"14"},{"size":3009,"mtime":1608125077282,"results":"19","hashOfConfig":"14"},{"size":1803,"mtime":1608128619618,"results":"20","hashOfConfig":"14"},{"size":1724,"mtime":1608124984034,"results":"21","hashOfConfig":"14"},{"size":1249,"mtime":1608125007643,"results":"22","hashOfConfig":"14"},{"size":3145,"mtime":1608139001242,"results":"23","hashOfConfig":"14"},{"size":505,"mtime":1608135308350,"results":"24","hashOfConfig":"14"},{"size":344,"mtime":1608143433190,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jewh4h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shubham/Desktop/Square/myjobs/src/index.js",[],["54","55"],"/home/shubham/Desktop/Square/myjobs/src/App.js",[],"/home/shubham/Desktop/Square/myjobs/src/reportWebVitals.js",[],"/home/shubham/Desktop/Square/myjobs/src/Component/Home.js",["56"],"/home/shubham/Desktop/Square/myjobs/src/Component/Login.js",["57","58","59","60","61"],"import react, { useState } from 'react';\nimport './style.css'\nimport {Switch, Route, Redirect, Link} from 'react-router-dom';\nfunction Login(){\n    const [logindata, setLogindata] = useState({});\n    const [redirect, setredirect] = useState();\n    const handledata = ()=>{\n        const  email = document.getElementById(\"email\").value;\n        const  password = document.getElementById(\"pwd\").value;\n        postData('https://jobs-api.squareboat.info/api/v1/auth/login', {\n            email: email,\n            password: password\n        }).then(data => {\n              setLogindata(data);\n              console.log(data);\n              if(data.data.userRole===1){\n                localStorage.setItem('user', JSON.stringify(data.data));\n                setredirect(<Redirect to='/candidateDashboard'/>)\n              }else if(data.data.userRole===0){\n                localStorage.setItem('user', JSON.stringify(data.data))\n                setredirect(<Redirect to='/recuirterDashboard'/>)\n              }\n        }).catch((err)=>{\n            console.log(err)\n        });\n    }\n    async function postData(url = '', data = {}) {\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors', \n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow', \n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n        return response.json(); \n      }\n    return(\n        <div class=\"loginCard\"> \n        <h2>Login</h2>\n        <label for=\"email\">Enter Email:</label>\n        <br/>\n        <input type=\"email\" id=\"email\" name=\"email\"/> \n        <br/>\n        <label for=\"pwd\">Password:</label>\n        <br/>\n        <input type=\"password\" id=\"pwd\" name=\"pwd\"/>\n        <button class=\"submit\" onClick={handledata}>Submit</button> \n        <p class= \"cardEndText\">New to MyJobs? <span>Create an Account</span></p>\n        {redirect}\n       </div>\n    )\n}\nexport default Login;","/home/shubham/Desktop/Square/myjobs/src/Component/SignUp.js",["62"],"import React, { useState } from 'react';\nimport './style.css'\nimport {Redirect, Link} from 'react-router-dom';\nfunction SignUp(){\n    const [isCandidateORRecuirter, setZeroOROne] = useState(0);\n    const candidate = ()=>{\n        document.getElementById(\"candidate\").style.backgroundColor = \"#43AFFF\";\n        document.getElementById(\"recuriter\").style.backgroundColor = \"#A9AFBC\"\n        setZeroOROne(1);\n    }\n    const recuriter = ()=>{\n        document.getElementById(\"recuriter\").style.backgroundColor = \"#43AFFF\";\n        document.getElementById(\"candidate\").style.backgroundColor = \"#A9AFBC\";\n        setZeroOROne(0);\n    }\n    const handledata = ()=>{\n        const  email = document.getElementById(\"email\").value;\n        const  password = document.getElementById(\"pwd\").value;\n        const  confirmPassword = document.getElementById(\"cnfpwd\").value;\n        const  name = document.getElementById(\"name\").value;\n        const  skills = document.getElementById(\"skill\").value;\n        const  userRole = isCandidateORRecuirter;\n        postData('https://jobs-api.squareboat.info/api/v1/auth/register', {\n            email: email,\n            userRole: userRole, \n            password: password,\n            confirmPassword: confirmPassword,\n            name: name,\n            skills: skills\n        })\n            .then(data => {\n              console.log(data);\n              <Redirect to= '/login' />\n        });\n    }\n    async function postData(url = '', data = {}) {\n        console.log(data);\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors', \n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow', \n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n        return response.json(); \n      }\n      \n      \n    return(\n        <div class=\"SignUpCard\"> \n        <h2>SignUp</h2>\n        <div>\n        <button id=\"candidate\" onClick={candidate}>Candidate</button>\n        <button id=\"recuriter\" onClick={recuriter}>Recuirter</button>\n        </div>\n        <br/>\n        <label for=\"name\">Full Name:</label>\n        <br/>\n        <input type=\"text\" id=\"name\" name=\"name\"/> \n        <br/>\n        <label for=\"email\">Enter Email:</label>\n        <br/>\n        <input type=\"email\" id=\"email\" name=\"email\"/> \n        <br/>\n        <label for=\"pwd\">Password:</label>\n        <br/>\n        <input type=\"password\" id=\"pwd\" name=\"pwd\"/>\n        <br/>\n        <label for=\"cnfpwd\">Confirm Password:</label>\n        <br/>\n        <input type=\"password\" id=\"cnfpwd\" name=\"cnfpwd\"/>\n        <br/>\n        <label for=\"skill\">Skill</label>\n        <br/>\n        <input type=\"text\" id=\"skill\" name=\"skill\"/> \n        <button class=\"submit\" onClick = {handledata}>Submit</button> \n        <p class= \"cardEndText\">New to MyJobs? <span>Create an Account</span></p>\n       </div>\n    )\n}\nexport default SignUp;","/home/shubham/Desktop/Square/myjobs/src/Component/CreateJob.js",["63"],"/home/shubham/Desktop/Square/myjobs/src/Component/CandidateDashBoard.js",[],"/home/shubham/Desktop/Square/myjobs/src/Component/CandidateJobCard.js",["64"],"import react from 'react';\nimport './style.css'\nfunction CandidateJobCard(props){\n    async function postData(url = '', data = {}) {\n        const datafromLocalstorage = JSON.parse(localStorage.getItem('user'));\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors', \n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': datafromLocalstorage.token\n          },\n          redirect: 'follow', \n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n        return response.json(); \n    }\n\n    const handleApply = (id)=>{\n        postData('https://jobs-api.squareboat.info/api/v1/candidates/jobs', {\n            jobId : id\n        }).then(data => {\n              console.log(data);\n        }).catch((err)=>{\n            console.log(err)\n        });\n    }\n    return(\n        <div class=\"jobCard\"> \n             <h4>{props.data.title}</h4>\n             <p>{props.data.description}</p>\n             <span>{props.data.location}</span>\n             <button onClick={()=> handleApply(props.data.id)}>Apply</button>\n       </div>\n    )\n}\nexport default CandidateJobCard;","/home/shubham/Desktop/Square/myjobs/src/Component/RecuirterDashBoard.js",["65"],"/home/shubham/Desktop/Square/myjobs/src/Component/RecuirteJobCards.js",["66"],"/home/shubham/Desktop/Square/myjobs/src/Component/CandidateWhoAppliedforRecuriter.js",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":3,"column":9,"nodeType":"75","messageId":"76","endLine":3,"endColumn":15},{"ruleId":"73","severity":1,"message":"78","line":3,"column":17,"nodeType":"75","messageId":"76","endLine":3,"endColumn":22},{"ruleId":"73","severity":1,"message":"79","line":3,"column":34,"nodeType":"75","messageId":"76","endLine":3,"endColumn":38},{"ruleId":"73","severity":1,"message":"80","line":5,"column":12,"nodeType":"75","messageId":"76","endLine":5,"endColumn":21},{"ruleId":"73","severity":1,"message":"79","line":3,"column":19,"nodeType":"75","messageId":"76","endLine":3,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"81","line":1,"column":15,"nodeType":"75","messageId":"76","endLine":1,"endColumn":23},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'logindata' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]
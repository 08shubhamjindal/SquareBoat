[{"/home/shubham/Desktop/Square/myjobs/src/index.js":"1","/home/shubham/Desktop/Square/myjobs/src/App.js":"2","/home/shubham/Desktop/Square/myjobs/src/reportWebVitals.js":"3","/home/shubham/Desktop/Square/myjobs/src/Component/Home.js":"4","/home/shubham/Desktop/Square/myjobs/src/Component/Login.js":"5","/home/shubham/Desktop/Square/myjobs/src/Component/SignUp.js":"6","/home/shubham/Desktop/Square/myjobs/src/Component/CreateJob.js":"7","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateDashBoard.js":"8","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateJobCard.js":"9","/home/shubham/Desktop/Square/myjobs/src/Component/RecuirterDashBoard.js":"10","/home/shubham/Desktop/Square/myjobs/src/Component/RecuirteJobCards.js":"11","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateWhoAppliedforRecuriter.js":"12","/home/shubham/Desktop/Square/myjobs/src/Component/ForgotPassword.js":"13"},{"size":379,"mtime":1608097633159,"results":"14","hashOfConfig":"15"},{"size":1011,"mtime":1608203465047,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608095698626,"results":"17","hashOfConfig":"15"},{"size":556,"mtime":1608144987226,"results":"18","hashOfConfig":"15"},{"size":3348,"mtime":1608203492690,"results":"19","hashOfConfig":"15"},{"size":6548,"mtime":1608184089552,"results":"20","hashOfConfig":"15"},{"size":3390,"mtime":1608191218995,"results":"21","hashOfConfig":"15"},{"size":2216,"mtime":1608191916512,"results":"22","hashOfConfig":"15"},{"size":1660,"mtime":1608201461869,"results":"23","hashOfConfig":"15"},{"size":3560,"mtime":1608201661867,"results":"24","hashOfConfig":"15"},{"size":579,"mtime":1608193348021,"results":"25","hashOfConfig":"15"},{"size":427,"mtime":1608201542001,"results":"26","hashOfConfig":"15"},{"size":1784,"mtime":1608204161996,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jewh4h",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shubham/Desktop/Square/myjobs/src/index.js",[],["63","64"],"/home/shubham/Desktop/Square/myjobs/src/App.js",[],"/home/shubham/Desktop/Square/myjobs/src/reportWebVitals.js",[],"/home/shubham/Desktop/Square/myjobs/src/Component/Home.js",["65"],"import react from 'react';\nimport './style.css'\nimport {Link} from 'react-router-dom';\nfunction Home(){\n    return(\n       <div>\n          <span class=\"headingText\">MyJobs</span>\n          <Link className=\"loginSignUp\" to=\"/login\">Login/SignUp</Link>\n           <div class=\"homeInsideContent\">\n              <div class=\"homepageHeading\">\n                 <h1>Welcome to MyJobs</h1>\n                 <Link id=\"getStartedButton\" to=\"/signUp\">Get Started</Link>\n              </div>\n           </div>\n          <br/>\n       </div>\n    )\n}\nexport default Home;","/home/shubham/Desktop/Square/myjobs/src/Component/Login.js",["66","67","68","69"],"import react, { useState } from 'react';\nimport './style.css'\nimport {Switch, Route, Redirect, Link} from 'react-router-dom';\nfunction Login(){\n    const [logindata, setLogindata] = useState({});\n    const [redirect, setredirect] = useState();\n    const [email, setemail] = useState(false);\n    const [createPassword, setcreatePassword] = useState(false);\n    const [loader, setloader] = useState(true);\n    const checkEmail = (email)=>{\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if(re.test(String(email).toLowerCase())){\n        return true;\n      }else{\n        setemail(true);\n        return false;\n      }\n    }\n\n    const checkpassword = (password)=>{\n        if(password.length>=0 && password.length<6){\n          setcreatePassword(true)\n          return false;\n        }\n        setcreatePassword(false);\n        return true;\n    }\n\n    const handledata = ()=>{\n        const  email = document.getElementById(\"email\").value;\n        const  password = document.getElementById(\"pwd\").value;\n        if(checkEmail(email) && checkpassword(password)){\n            setloader(false);\n            postData('https://jobs-api.squareboat.info/api/v1/auth/login', {\n            email: email,\n            password: password\n        }).then(data => {\n              setLogindata(data);\n              setloader(true);\n              if(data.data.userRole===1){\n                localStorage.setItem('user', JSON.stringify(data.data));\n                setredirect(<Redirect to='/candidateDashboard'/>)\n              }else if(data.data.userRole===0){\n                localStorage.setItem('user', JSON.stringify(data.data))\n                setredirect(<Redirect to='/recuirterDashboard'/>)\n              }\n        }).catch((err)=>{\n            console.log(err)\n        });\n        }\n        \n    }\n    async function postData(url = '', data = {}) {\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors', \n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow', \n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n        return response.json(); \n      }\n    return(\n        <div class=\"loginCard\"> \n        <h2>Login</h2>\n        <label for=\"email\">Enter Email:</label>\n        <br/>\n        <input type=\"email\" id=\"email\" name=\"email\"/> \n        <br/>\n        {email?<span class=\"errorfield\">Email not in correct format</span>:<span></span>}\n        <br/>\n        <label for=\"pwd\">Password:</label>\n        <span><Link id=\"forgetPassword\" to=\"/forgetPassword\">Forget your Password</Link></span>\n        <br/>\n        <input type=\"password\" id=\"pwd\" name=\"pwd\"/>\n        {createPassword?<span class=\"errorfield\">Password should be greater than or equal to 6</span>:<span></span>}\n        <br/>\n        <button class=\"submit\" onClick={handledata}>Submit</button> \n        <p id=\"cardEndText\">New to MyJobs? <span><Link id=\"newtoJobs\" to=\"/signUp\">Create an Account</Link></span></p>\n        {redirect}\n        <div class=\"loader\" style={{display : loader ? 'none' : 'block'}}></div>\n        </div>\n    )\n}\nexport default Login;","/home/shubham/Desktop/Square/myjobs/src/Component/SignUp.js",["70"],"import React, { useState } from 'react';\nimport './style.css'\nimport {Redirect, Link} from 'react-router-dom';\nfunction SignUp(){\n    const [isCandidateORRecuirter, setZeroOROne] = useState(0);\n    const [email, setemail] = useState(false);\n    const [fullname, setfullName] = useState(false);\n    const [fullnamelength, setfullNamelength] = useState(false);\n    const [createPassword, setcreatePassword] = useState(false);\n    const [confirmPassword, setconfirmPassword] = useState(false);\n    const [checkPassword, setcheckPassword] = useState(false);\n    const [skills, setskills] = useState(false);\n    const [loader, setloader] = useState(true);\n\n    const candidate = ()=>{\n        document.getElementById(\"candidate\").style.backgroundColor = \"#43AFFF\";\n        document.getElementById(\"recuriter\").style.backgroundColor = \"#A9AFBC\"\n        setZeroOROne(1);\n    }\n    const recuriter = ()=>{\n        document.getElementById(\"recuriter\").style.backgroundColor = \"#43AFFF\";\n        document.getElementById(\"candidate\").style.backgroundColor = \"#A9AFBC\";\n        setZeroOROne(0);\n    }\n\n    const checkEmail = (email)=>{\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if(re.test(String(email).toLowerCase())){\n        return true;\n      }else{\n        setemail(true);\n        return false;\n      }\n    }\n    const checkName = (name)=>{\n      console.log(name)\n       if(name.length>=3 && name.length<=100){\n        setfullName(false);\n        setfullNamelength(false);\n        return true;\n       }else if((name.length>0 && name.length <=2) || name.length>100){\n         setfullName(false);\n         setfullNamelength(true);\n         return false;\n       }else{\n         setfullName(true);\n         setfullNamelength(false);\n        return false;\n       }\n    }\n    const checkSkills = (skills)=>{\n      if(skills.length>=3 && skills.length<=150){\n        setskills(false);\n        return true;\n      }else{\n        setskills(true);\n        return false;\n      }\n    }\n    const checkpassword = (password, checkpassword)=>{\n      console.log(password);\n      console.log(checkpassword);\n        if(password.length>=0 && password.length<6){\n          setcreatePassword(true)\n          return false;\n        }else if(checkpassword.length>=0 && checkpassword.length<6){\n          setconfirmPassword(true);\n          return false;\n        }else if(password.length>=6 &&  checkpassword.length>=6 && checkpassword!==password){\n          setcreatePassword(false)\n          setconfirmPassword(false);\n          setcheckPassword(true);\n          return false;\n        }else{\n          setcreatePassword(false);\n          setconfirmPassword(false);\n          setcheckPassword(false);\n          return true;\n        }\n    }\n    const handledata = ()=>{\n        const  email = document.getElementById(\"email\").value;\n        const  password = document.getElementById(\"pwd\").value;\n        const  confirmPassword = document.getElementById(\"cnfpwd\").value;\n        const  name = document.getElementById(\"name\").value;\n        const  skills = document.getElementById(\"skill\").value;\n        const  userRole = isCandidateORRecuirter;\n\n        if(checkEmail(email) && checkName(name) && checkpassword(password, confirmPassword) && checkSkills(skills)){\n          setloader(false);\n          postData('https://jobs-api.squareboat.info/api/v1/auth/register', {\n            email: email,\n            userRole: userRole, \n            password: password,\n            confirmPassword: confirmPassword,\n            name: name,\n            skills: skills\n        }).then(data => {\n              setloader(true);\n              if(data.data){\n                window.location = '/login'\n                window.alert('sucessfully registered')\n              }else{\n                window.alert('already register')\n              }\n        }).catch(err =>{\n          console.log('hereeeeeee')\n        });\n        }\n        \n    }\n    async function postData(url = '', data = {}) {\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors', \n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow', \n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n        return response.json(); \n      }\n      \n      \n    return(\n        <div class=\"SignUpCard\"> \n        <h2>SignUp</h2>\n        <label for=\"Iam\">I am a:</label>\n        <br/>\n        <button id=\"candidate\" onClick={candidate}>Candidate</button>\n        <button id=\"recuriter\" onClick={recuriter}>Recuirter</button>\n        <br/>\n        <label for=\"name\">Full Name:</label>\n        <br/>\n        <input type=\"text\" id=\"name\" name=\"name\"/> \n        <br/>\n        {fullname?<span class=\"errorfield\">This field is required</span>:<span></span>}\n        {fullnamelength?<span class=\"errorfield\">Name should be greater 3 and lesss than 100</span>:<span></span>}\n        <br/>\n        <label for=\"email\">Enter Email:</label>\n        <br/>\n        <input type=\"email\" id=\"email\" name=\"email\"/> \n        <br/>\n        {email?<span class=\"errorfield\">Email not in correct format</span>:<span></span>}\n        <br/>\n        <label for=\"pwd\">Password:</label>\n        <br/>\n        <input type=\"password\" id=\"pwd\" name=\"pwd\"/>\n        <br/>\n        {createPassword?<span class=\"errorfield\">Password should be greater than or equal to 6</span>:<span></span>}\n        <br/>\n        <label for=\"cnfpwd\">Confirm Password:</label>\n        <br/>\n        <input type=\"password\" id=\"cnfpwd\" name=\"cnfpwd\"/>\n        <br/>\n        {confirmPassword?<span class=\"errorfield\">ConfirmPassword should be greater than 6</span>:<span></span>}\n        <br/>\n        {checkPassword?<span class=\"errorfield\">Password and Confirm Password should Match</span>:<span></span>}\n        <br/>\n        <label for=\"skill\">Skill</label>\n        <br/>\n        <input type=\"text\" id=\"skill\" name=\"skill\"/> \n        {skills?<span class=\"errorfield\">skills should be greater 3 and lesss than 150</span>:<span></span>}\n        <br/>\n        <button class=\"submit\" onClick = {handledata}>Submit</button> \n        <p class= \"cardEndText\">Have an Account? <span><Link id=\"newtoJobs\" to=\"/login\">Login</Link></span></p>\n        <div class=\"loader\" style={{display : loader ? 'none' : 'block'}}></div>\n       </div>\n    )\n}\nexport default SignUp;","/home/shubham/Desktop/Square/myjobs/src/Component/CreateJob.js",["71"],"import react,{useState} from 'react';\nimport './style.css'\nfunction CreateJob(){\n\n    const [title, settitle] = useState(false);\n    const [des, setdes] = useState(false);\n    const [locat, setlocat] = useState(false);\n    const [loader, setloader] = useState(true);\n\n    const checktitle = (title)=>{\n      if((title.length>=0 && title.length<3 )|| title.length>100){\n        settitle(true)\n        return false;\n      }\n      settitle(false);\n      return true;\n    }\n    const checkDes = (description)=>{\n      if((description.length>=0 && description.length<3) || description.length>100){\n        setdes(true)\n        return false;\n      }\n      setdes(false);\n      return true;\n    }\n    const checklocation = (location)=>{\n      if((location.length>=0 && location.length<3) || location.length>100){\n        setlocat(true)\n        return false;\n      }\n      setlocat(false);\n      return true;\n    }\n    const handledata = () =>{\n        const  title = document.getElementById(\"jobtitle\").value;\n        const  description = document.getElementById(\"des\").value;\n        const  location = document.getElementById(\"loc\").value;\n        const datafromLocalstorage = JSON.parse(localStorage.getItem('user'));\n        if(checktitle(title) && checkDes(description)\n           && checklocation(location) && datafromLocalstorage && datafromLocalstorage.userRole===0){\n            setloader(false);\n            postData('https://jobs-api.squareboat.info/api/v1/jobs/', {\n            title: title,\n            description: description,\n            location : location\n        }, datafromLocalstorage.token).then(data => {\n              if(data.data){\n               setloader(true);\n               window.location = '/recuirterDashboard'\n\n              }else{\n                 alert('something wrong')\n              }\n              console.log(data);\n        });\n        }\n        \n    }\n    async function postData(url = '', data = {}, token) {\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors', \n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization':  token\n          },\n          redirect: 'follow', \n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n        return response.json(); \n      }\n    return(\n        <div class=\"postJobform\"> \n        <h2>Post Job</h2>\n        <label for=\"jobtitle\">Job Title:</label>\n        <br/>\n        <input type=\"text\" id=\"jobtitle\" name=\"jobtitle\"/> \n        <br/>\n        {title?<span class=\"errorfield\">title should be greater than or equal to 3</span>:<span></span>}\n        <br/>\n        <label for=\"des\">Description:</label>\n        <br/>\n        <input type=\"text\" id=\"des\" name=\"des\"/> \n        <br/>\n        {des?<span class=\"errorfield\">Description should be greater than or equal to 3</span>:<span></span>}\n        <label for=\"loc\">Location:</label>\n        <br/>\n        <input type=\"text\" id=\"loc\" name=\"loc\"/> \n        <br/>\n        {locat?<span class=\"errorfield\">Location should be greater than or equal to 3</span>:<span></span>}\n        <br/>\n        <button class=\"submit\" onClick={handledata}>Submit</button> \n        <div class=\"loader\" style={{display : loader ? 'none' : 'block'}}></div>\n       </div>\n    ) \n}\nexport default CreateJob","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateDashBoard.js",[],"/home/shubham/Desktop/Square/myjobs/src/Component/CandidateJobCard.js",["72"],"import react, {useState} from 'react';\nimport './style.css'\nfunction CandidateJobCard(props){\n    const [loader, setloader] = useState(true);\n\n    async function postData(url = '', data = {}) {\n        const datafromLocalstorage = JSON.parse(localStorage.getItem('user'));\n        const response = await fetch(url, {\n          method: 'POST', \n          mode: 'cors', \n          cache: 'no-cache',\n          credentials: 'same-origin', \n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': datafromLocalstorage.token\n          },\n          redirect: 'follow', \n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(data)\n        });\n        return response.json(); \n    }\n\n    const handleApply = (id)=>{\n        setloader(false);\n        postData('https://jobs-api.squareboat.info/api/v1/candidates/jobs', {\n            jobId : id\n        }).then(data => {\n              setloader(true);\n              window.alert('You applied sucessfully');\n              window.location = '/candidateDashboard'\n              console.log(data);\n        }).catch((err)=>{\n            console.log(err)\n        });\n    }\n    return(\n        <div class=\"jobCard\"> \n             <h4>{props.data.title}</h4>\n             <p>{props.data.description}</p>\n             <span><i className=\"fas fa-map-marker\"></i> { props.data.location}</span>\n             {!props.appliedORAll?<button id= \"viewApplication\" onClick={()=> handleApply(props.data.id)}>Apply</button> :<span></span>}\n             <div class=\"loader\" style={{display : loader ? 'none' : 'block'}}></div>\n       </div>\n    )\n}\nexport default CandidateJobCard;","/home/shubham/Desktop/Square/myjobs/src/Component/RecuirterDashBoard.js",["73"],"import react,{useState} from 'react';\nimport './style.css'\nimport {Link} from 'react-router-dom';\nimport { useEffect } from 'react';\nimport RecuirteJobCards from './RecuirteJobCards'\nimport CandidateWHoAppliedforRecuriter from './CandidateWhoAppliedforRecuriter';\n\nfunction RecuirterDashBoard(){\n    const [jobPostedByRecuritUser, setjobPostedByRecuritUser] = useState([]);\n    const [allCandidateApplyOnParticularJob, setallCandidateApplyOnParticularJob] = useState([]);\n    const [isModelshow, setisModelshow] = useState(true);\n\n    function fetchData(url = '', token) {\n        const myHeaders = new Headers();\n        myHeaders.append('Content-Type', 'application/json');\n        myHeaders.append('Authorization', token);\n        \n       fetch(url, {\n        method: 'GET',\n        headers: myHeaders,\n       }).then((response) => response.json())\n      .then((data) => {\n         console.log(data);\n         setjobPostedByRecuritUser(data.data.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n\n    async function getCandidateDataofParticularJob(url = '', data = {}) {\n        const myHeaders = new Headers();\n        const datafromLocalstorage = JSON.parse(localStorage.getItem('user'));\n        myHeaders.append('Content-Type', 'application/json');\n        myHeaders.append('Authorization', datafromLocalstorage.token);\n        const res =  await fetch(url, {\n                                 method: 'GET',\n                                 headers: myHeaders,\n                                 });\n        return res.json();\n    }\n\n    const handleViewApplication = (id)=>{\n        getCandidateDataofParticularJob('https://jobs-api.squareboat.info/api/v1/recruiters/jobs/'+id + '/candidates').then(data => {\n              console.log(data);\n              if(data.data){\n                setallCandidateApplyOnParticularJob(data.data)\n              }\n              setisModelshow(false);\n        }).catch((err)=>{\n            console.log(err)\n        });\n    }\n    const closeModel = ()=>{\n        setisModelshow(true);\n    }\n    const logOut = ()=>{\n      setTimeout(()=>{\n        localStorage.clear();\n        window.location = '/'\n      }, 2000);\n\n    }\n    useEffect(() => {\n      const datafromLocalstorage = JSON.parse(localStorage.getItem('user'));\n        if(datafromLocalstorage && datafromLocalstorage.userRole===0){\n          fetchData('https://jobs-api.squareboat.info/api/v1/recruiters/jobs', datafromLocalstorage.token);\n        }else{\n          window.location = '/'\n        }\n    }, []);\n\n    return(\n         <div>\n         <div class=\"upper\">\n         <button class='logout' onClick={logOut}>Logout</button>\n         <Link className=\"loginSignUp\" to=\"/createJob\">Post a Job</Link>\n         <br/>\n         <div class=\"allJobCard\">\n              {jobPostedByRecuritUser.map((d, index)=>{\n                return <RecuirteJobCards data= {d} key={index} handleViewApplication = {handleViewApplication}/>\n              })}\n         </div>\n         <div class=\"modal\" style={{ display : isModelshow ? 'none' : 'block'}}>\n         <div class=\"modal-content\">\n         <span class=\"close\" onClick={closeModel}>&times;</span>\n         <p id=\"applicantsLine\">Applicants for this Job</p>\n         <br/>\n         <div class=\"candWhoApplied\">\n          {allCandidateApplyOnParticularJob.map((d, index)=>{\n            return <CandidateWHoAppliedforRecuriter data= {d} key={index}/>\n          })}\n        </div>\n         </div>\n         </div>\n         </div>\n         </div>\n    )\n}\nexport default RecuirterDashBoard","/home/shubham/Desktop/Square/myjobs/src/Component/RecuirteJobCards.js",["74"],"import react from 'react';\nimport './style.css'\nfunction RecuirteJobCards(props){\n    \n    const handleViewApplication = (id)=>{\n        props.handleViewApplication(id);\n    }\n    return(\n        <div class=\"jobCard\"> \n             <h4>{props.data.title}</h4>\n             <p>{props.data.description}</p>\n             <span><i className=\"fas fa-map-marker\"></i> {props.data.location}\n             <button id= \"viewApplication\" onClick={()=>handleViewApplication(props.data.id)}>View Application</button>\n             </span>\n       </div>\n    )\n}\nexport default RecuirteJobCards;","/home/shubham/Desktop/Square/myjobs/src/Component/CandidateWhoAppliedforRecuriter.js",["75"],"import react from 'react';\nfunction CandidateWHoAppliedforRecuriter(props){\n     return(\n         <div class =\"jobCard applictioncard\">\n             <h4>{props.data.name}</h4>\n             <span><i class=\"fas fa-envelope-square\"></i> {props.data.email}</span>\n             <br/>\n             <strong>Skills</strong>\n             <p>{props.data.skills}</p>\n         </div>\n     )\n}\nexport default CandidateWHoAppliedforRecuriter","/home/shubham/Desktop/Square/myjobs/src/Component/ForgotPassword.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"85","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":15},{"ruleId":"81","severity":1,"message":"86","line":3,"column":17,"nodeType":"83","messageId":"84","endLine":3,"endColumn":22},{"ruleId":"81","severity":1,"message":"87","line":5,"column":12,"nodeType":"83","messageId":"84","endLine":5,"endColumn":21},{"ruleId":"81","severity":1,"message":"88","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'logindata' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]